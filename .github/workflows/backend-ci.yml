name: Backend CI

on:
  push:
    branches: [ main, master ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  test:
    name: Run Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
        
      - name: Generate Prisma client
        working-directory: ./backend
        run: npx prisma generate
        
      - name: Run tests
        working-directory: ./backend
        run: npm test
  
  docker-build:
    name: Verify Docker Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          load: true
          tags: backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: [test, docker-build]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      
      - name: Setup SSH Config
        run: |
          echo "Host ec2
            HostName ${{ secrets.EC2_HOST }}
            User ec2-user
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no" > ~/.ssh/config
      
      - name: Create deployment directory on EC2
        run: ssh ec2 'mkdir -p ~/app/backend'
      
      - name: Transfer files to EC2
        run: |
          rsync -avz --exclude 'node_modules' --exclude '.git' ./backend/ ec2:~/app/backend/
      
      - name: Install dependencies and build on EC2
        run: |
          ssh ec2 'cd ~/app/backend && npm ci && npx prisma generate && npm run build'
      
      - name: Setup environment file
        run: |
          ssh ec2 'cd ~/app/backend && cp .env.example .env'
          ssh ec2 'cd ~/app/backend && echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env'
          ssh ec2 'cd ~/app/backend && echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env'
          # Add any other environment variables needed
      
      - name: Setup PM2 and restart service
        run: |
          ssh ec2 'if ! command -v pm2 &> /dev/null; then npm install -g pm2; fi'
          ssh ec2 'cd ~/app/backend && pm2 delete backend || true'
          ssh ec2 'cd ~/app/backend && pm2 start dist/src/main.js --name backend'
          ssh ec2 'pm2 save'
      
      - name: Cleanup SSH key
        run: rm -f ~/.ssh/id_rsa
